name: Regression Tests

on:
  push:
    branches:
    - master
    - ral_dev
  pull_request:
    branches:
    - master
    - ral_dev
  workflow_dispatch:

jobs:

  tests:
    name: Python ${{matrix.python-version}} | cocotb ${{matrix.cocotb-version}}
    runs-on: ubuntu-24.04

    strategy:
      fail-fast: false
      matrix:
        include:
          # Test all Python versions with latest cocotb
          - python-version: "3.6"
            cocotb-version: "1.9"
          - python-version: "3.7"
            cocotb-version: "1.9"
          - python-version: "3.8"
            cocotb-version: "1.9"
          - python-version: "3.9"
            cocotb-version: "1.9"
          - python-version: "3.10"
            cocotb-version: "1.9"
          - python-version: "3.11"
            cocotb-version: "1.9"
          - python-version: "3.12"
            cocotb-version: "1.9"
          - python-version: "3.13"
            cocotb-version: "1.9"
          # Test other cocotb versions
          - python-version: "3.8"
            cocotb-version: "1.6"
          - python-version: "3.8"
            cocotb-version: "1.7"
          - python-version: "3.8"
            cocotb-version: "1.8"

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{matrix.python-version}} (setup-python)
      if: matrix.python-version != 3.6 && matrix.python-version != 3.7
      uses: actions/setup-python@v2
      with:
        python-version: ${{matrix.python-version}}
    - name: Set up Python ${{matrix.python-version}} (pyenv pt.1)
      if: matrix.python-version == 3.6 || matrix.python-version == 3.7
      uses: gabrielfalcao/pyenv-action@a1fc55906be92612782934c70e3985b940bd0165  # v18
      with:
        default: ${{matrix.python-version}}
        command: pip install -U pip  # upgrade pip after installing python
    - name: Set up Python ${{matrix.python-version}} (pyenv pt.2)
      if: matrix.python-version == 3.6 || matrix.python-version == 3.7
      run: |
        pyenv install ${{matrix.python-version}}
        pyenv global ${{matrix.python-version}}

    - name: Install Python testing dependencies
      run: |
        pip install tox tox-gh-actions

    - name: Install Icarus Verilog
      run: |
        sudo apt install -y --no-install-recommends iverilog

    - name: Install GHDL
      run: |
        sudo apt install -y --no-install-recommends ghdl-mcode ghdl

    - name: Test
      run: |
        COCOTB_VERSION=${{matrix.cocotb-version}} tox
